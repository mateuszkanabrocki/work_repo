# import ex49_lexicon
# __Import__ ('C:\Windows\System32\projects\ex49\ex49')
# path ='C:\Windows\System32\projects\ex49\ex49_lexicon'
# print(path)
# a='\u005C'
# file=open(f"C:{a}Windows{a}System32{a}projects{a}ex49{a}ex49_lexicon")



# take ('noun','princess') return 'noun'
def peek(word_list):
    if word_list:
        word = word_list[0]
        return word[0]
    else:
        return None


# take ('noun','princess') and 'noun' pop and return ('noun','princess')
def match(word_list, expecting):
    if word_list:
        word = word_list.pop(0)

        if word[0] == expecting:
            return word
        else:
            return None
    else:
        return None


def skip(word_list, word_type):
    while peek(word_list) == word_type:
        match(word_list, word_type)
    return word_list


class ParserError(Exception):
    pass


class Sentence(object):

    subject = None
    verb = None
    objectt = None


    def parse_object(self, word_list):
        skip(word_list, 'stop')
        next_word = peek(word_list)

        if next_word == 'noun':
            return match(word_list, 'noun')
        elif next_word == 'direction':
            return match(word_list, 'direction')
        else:
            raise ParserError("Expected a noun or direction next.")


    def parse_verb(self, word_list):
        skip(word_list, 'stop')

        if peek(word_list) == 'verb':
            return match(word_list, 'verb')
        else:
            raise ParserError("Expected a verb next.")


    def parse_subject(self, word_list):
        skip(word_list, 'stop')
        next_word = peek(word_list)
        if next_word == 'noun':
            print("3333", word_list)
            return match(word_list, 'noun')
        elif next_word == 'verb':
            return ('noun', 'player')
        else:
            raise ParserError("Expected a verb next.")


    def parse_sentence(self, word_list):
        self.subject = self.parse_subject(word_list)
        self.verb = self.parse_verb(word_list)
        self.objectt = self.parse_object(word_list)

